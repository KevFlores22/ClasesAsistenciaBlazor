@page "/"
@using clases_asistenciaAPI.DTO
@using clases_asistenciaAPI.Services

<PageTitle>Login</PageTitle>

<div class="login-background d-flex justify-content-center align-items-start" style="height: 80vh; margin-top: 50px;">
    <div class="card p-4 shadow-sm" style="width: 300px; background-color: rgba(255, 255, 255, 0.8);">
        <EditForm Model="usuarioSession" OnValidSubmit="Login">
            <div class="mb-3">
                <label class="form-label">Nombre Usuario</label>
                <InputText class="form-control" @bind-Value="usuarioSession.UsuarioNombre" />
            </div>

            <div class="mb-3">
                <label class="form-label">Contraseña</label>
                <InputText type="password" class="form-control" @bind-Value="usuarioSession.UsuarioPassword" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Login</button>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }
        </EditForm>
    </div>
</div>

@inject NavigationManager navigationManager
@inject AuthService authService

@code {
    private UsuarioSession usuarioSession = new UsuarioSession();
    private string errorMessage;

    private bool isAuthenticated;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await authService.IsAuthenticated();

            if (isAuthenticated)
            {
                navigationManager.NavigateTo("/counter");
            }
            else
            {
                navigationManager.NavigateTo("/");
            }

            StateHasChanged();
        }
    }

    private async Task Login()
    {
        var token = await authService.Login(usuarioSession);
        if (string.IsNullOrEmpty(token))
        {
            errorMessage = "Credenciales Incorrectas";
            return;
        }

        await authService.SetToken(token);
        navigationManager.NavigateTo("/weather", true);
    }
}

<style>
    .login-background {
        background-image: url('/Imagenes/Logo2.jpg');
        background-size: cover;
        background-position: center;
    }
</style>
